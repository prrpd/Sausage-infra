---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-deploy
  labels:
    app: {{.Values.name}}
    app.kubernetes.io/name: sausage-{{.Values.name}}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: "{{ .Chart.AppVersion }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app.kubernetes.io/component: "{{ .Chart.Name }}"
    app.kubernetes.io/part-of: sausage-store
    env: "{{ .Values.environment }}"
spec:
  revisionHistoryLimit: {{.Values.revisionHistoryLimit}}
  replicas: {{.Values.replicas}}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      containers:
        - name: {{ .Values.containers.image.name }}
          image: "{{ .Values.global.imageRegistry }}{{ .Values.containers.image.name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: frontend
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 30
            timeoutSeconds: 1
            failureThreshold: 6
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-nginx-confmap
      imagePullSecrets:
        - name: {{ .Release.Name }}-docker-config-secret
