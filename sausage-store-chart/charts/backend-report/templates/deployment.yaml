---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-deploy
  labels:
    {{- include "sausage-store.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{.Values.revisionHistoryLimit}}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
    spec:
      containers:
        - name: {{ .Values.containers.image.name }}
          image: "{{ .Values.global.imageRegistry }}{{ .Values.containers.image.name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          resources:
            {{- toYaml .Values.containers.resources | nindent 12 }}
          env:
            - name: MONGO_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dbs
                  key: MONGO_USER
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dbs
                  key: MONGO_PASSWORD
            - name: MONGO_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dbs
                  key: MONGO_HOST
            - name: MONGO_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-dbs
                  key: MONGO_DATABASE
            - name: PORT
              value: "8080"
            - name: DB
              value: "mongodb://$(MONGO_USER):$(MONGO_PASSWORD)@$(MONGO_HOST):27018/$(MONGO_DATABASE)?tls=true"
      imagePullSecrets:
        - name: {{ .Release.Name }}-docker-config-secret
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{.Values.name}}
                topologyKey: "kubernetes.io/hostname"
